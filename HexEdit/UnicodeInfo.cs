namespace HexEdit;

internal class UnicodeInfo
{

#pragma warning disable IDE1006 // Naming Styles
	public object bidiMirroredGlyph { get; set; }
	public string quickCheckNFKD { get; set; }
	public bool idContinue { get; set; }
	public bool compositionExclusion { get; set; }
	public bool lowercase { get; set; }
	public bool graphemeExtend { get; set; }
	public string quickCheckNFD { get; set; }
	public string script { get; set; }
	public object indicMatraCategory { get; set; }
	public string indicSyllabicCategory { get; set; }
	public bool diacritic { get; set; }
	public bool logicalOrderException { get; set; }
	public int[] uppercaseMapping { get; set; }
	public int combiningClass { get; set; }
	public bool sentenceTerminal { get; set; }
	public bool joinControl { get; set; }
	public int bidiPairedBracket { get; set; }
	public bool alphabetic { get; set; }
	public string joiningGroup { get; set; }
	public string indicPositionalCategory { get; set; }
	public bool idStart { get; set; }
	public string[] scriptExtensions { get; set; }
	public object numericValue { get; set; }
	public bool cased { get; set; }
	public string quickCheckNFC { get; set; }
	public string bidiClass { get; set; }
	public bool terminalPunctuation { get; set; }
	public int[] lowercaseMapping { get; set; }
	public string age { get; set; }
	public string quickCheckNFKC { get; set; }
	public bool bidiM { get; set; }
	public string numericType { get; set; }
	public bool caseIgnorable { get; set; }
	public string generalCategory { get; set; }
	public bool uppercase { get; set; }
	public string wordBreak { get; set; }
	public bool idsBinaryOperator { get; set; }
	public bool ideographic { get; set; }
	public bool extender { get; set; }
	public bool bidiControl { get; set; }
	public string block { get; set; }
	public string decompositionType { get; set; }
	public bool variationSelector { get; set; }
	public string jamoShortName { get; set; }
	public string graphemeClusterBreak { get; set; }
	public bool softDotted { get; set; }
	public bool graphemeBase { get; set; }
	public int simpleUppercaseMapping { get; set; }
	public bool xidContinue { get; set; }
	public string name { get; set; }
	public bool quotationMark { get; set; }
	public bool compositionExclusionFull { get; set; }
	public string version { get; set; }
	public string joiningType { get; set; }
	public bool hexDigit { get; set; }
	public bool xidStart { get; set; }
	public bool unifiedIdeographic { get; set; }
	public string bidiPairedBracketType { get; set; }
	public bool idsTrinaryOperator { get; set; }
	public bool defaultIgnorableCodePoint { get; set; }
	public int simpleLowercaseMapping { get; set; }
	public bool radical { get; set; }
	public bool math { get; set; }
	public int[] titlecaseMapping { get; set; }
	public bool asciiHexDigit { get; set; }
	public bool whiteSpace { get; set; }
	public bool patternWhiteSpace { get; set; }
	public bool dash { get; set; }
	public bool noncharacter { get; set; }
	public string sentenceBreak { get; set; }
	public string name1 { get; set; }
	public int simpleTitlecaseMapping { get; set; }
	public string hangulSyllableType { get; set; }
	public bool deprecated { get; set; }
	public string eastAsianWidth { get; set; }
	public int[] decomposition { get; set; }
	public string linebreak { get; set; }
	public int codePoint { get; set; }
	public bool patternSyntax { get; set; }
#pragma warning restore IDE1006 // Naming Styles

}

